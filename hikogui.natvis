<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
    <Type Name="hi::v1::datum">
        <DisplayString Condition="_tag == 0">undefined</DisplayString>
        <DisplayString Condition="_tag == 1">{_value._double}</DisplayString>
        <DisplayString Condition="_tag == 2">{_value._long_long}</DisplayString>
        <DisplayString Condition="_tag == 3">{_value._decimal}</DisplayString>
        <DisplayString Condition="_tag == 4">{_value._bool}</DisplayString>
        <DisplayString Condition="_tag == 5">null</DisplayString>
        <DisplayString Condition="_tag == 6">{_value._year_month_day}</DisplayString>
        <DisplayString Condition="_tag == 7">continue</DisplayString>
        <DisplayString Condition="_tag == 8">break</DisplayString>
        <DisplayString Condition="_tag == -1">{*_value._string}</DisplayString>
        <DisplayString Condition="_tag == -2">{*_value._vector}</DisplayString>
        <DisplayString Condition="_tag == -3">{*_value._map}</DisplayString>
        <DisplayString Condition="_tag == -4">{*_value._url}</DisplayString>
        <DisplayString Condition="_tag == -5">{*_value._bstring}</DisplayString>
        <Expand>
            <ExpandedItem Condition="_tag == -2">*_value._vector</ExpandedItem>
            <ExpandedItem Condition="_tag == -3">*_value._map</ExpandedItem>
        </Expand>
    </Type>
    <Type Name="hi::v1::grapheme">
        <DisplayString>{static_cast&lt;char32_t&gt;((value >> 43) &amp; 0x1fffff)}</DisplayString>
    </Type>
    <Type Name="std::basic_string&lt;hi::v1::grapheme,std::char_traits&lt;hi::v1::grapheme&gt;,std::allocator&lt;hi::v1::grapheme&gt;&gt;&gt;">
        <DisplayString Condition="_Mypair._Myval2._Myres &lt; _Mypair._Myval2._BUF_SIZE">{_Mypair._Myval2._Bx._Buf,[_Mypair._Myval2._Mysize]}</DisplayString>
        <DisplayString Condition="_Mypair._Myval2._Myres &gt;= _Mypair._Myval2._BUF_SIZE">{_Mypair._Myval2._Bx._Ptr,[_Mypair._Myval2._Mysize]}</DisplayString>
        <Expand>
            <Item Name="[size]" ExcludeView="simple">_Mypair._Myval2._Mysize</Item>
            <Item Name="[capacity]" ExcludeView="simple">_Mypair._Myval2._Myres</Item>
            <Item Name="[allocator]" ExcludeView="simple">_Mypair</Item>
            <ArrayItems>
                <Size>_Mypair._Myval2._Mysize</Size>
                <ValuePointer Condition="_Mypair._Myval2._Myres &lt; _Mypair._Myval2._BUF_SIZE">_Mypair._Myval2._Bx._Buf</ValuePointer>
                <ValuePointer Condition="_Mypair._Myval2._Myres &gt;= _Mypair._Myval2._BUF_SIZE">_Mypair._Myval2._Bx._Ptr</ValuePointer>
            </ArrayItems>
        </Expand>
    </Type>
    <Type Name="hi::v1::unicode_mask::entry_type">
        <DisplayString>{(_value &amp; 0x7ff) == 0 ? 0 : _value >> 11} - {(_value &amp; 0x7ff) == 0 ? 0 : (_value >> 11) + (_value &amp; 0x7ff)}</DisplayString>
        <Expand>
            <Item Name="[Begin]">_value >> 11</Item>
            <Item Name="[End]">(_value >> 11) + (_value &amp; 0x7ff)</Item>
        </Expand>
    </Type>
    <Type Name="hi::v1::font">
        <DisplayString>{family_name} - {sub_family_name}</DisplayString>
    </Type>
    <Type Name="hi::v1::glyph_ids">
        <DisplayString Condition="(static_cast&lt;size_t&gt;(_ptr) &amp; 15) == 1">[] {*_font}</DisplayString>
        <DisplayString Condition="(static_cast&lt;size_t&gt;(_ptr) &amp; 15) == 3">[{static_cast&lt;int&gt;((static_cast&lt;size_t&gt;(_ptr) >> 16) &amp; 0xffff)}] {*_font}</DisplayString>
        <DisplayString Condition="(static_cast&lt;size_t&gt;(_ptr) &amp; 15) == 5">[{static_cast&lt;int&gt;((static_cast&lt;size_t&gt;(_ptr) >> 16) &amp; 0xffff)}, {static_cast&lt;int&gt;((static_cast&lt;size_t&gt;(_ptr) >> 32) &amp; 0xffff)}] {*_font}</DisplayString>
        <DisplayString Condition="(static_cast&lt;size_t&gt;(_ptr) &amp; 15) == 7">[{static_cast&lt;int&gt;((static_cast&lt;size_t&gt;(_ptr) >> 16) &amp; 0xffff)}, {static_cast&lt;int&gt;((static_cast&lt;size_t&gt;(_ptr) >> 32) &amp; 0xffff)}, {static_cast&lt;int&gt;((static_cast&lt;size_t&gt;(_ptr) >> 48) &amp; 0xffff)}] {*_font}</DisplayString>
        <DisplayString Condition="(static_cast&lt;size_t&gt;(_ptr) &amp; 1) == 0">{*_ptr} {*_font}</DisplayString>
        <Expand>
            <Item Name="[font]">*_font</Item>
            <Item Name="[num_glyphs]" Condition="(static_cast&lt;size_t&gt;(_ptr) &amp; 1) == 1">static_cast&lt;int&gt;((static_cast&lt;size_t&gt;(_ptr) >> 1) &amp; 3)</Item>
            <Item Name="[num_glyphs]" Condition="(static_cast&lt;size_t&gt;(_ptr) &amp; 1) == 0">_ptr->_num_glyphs</Item>
            <Item Name="[num_graphemes]" Condition="(static_cast&lt;size_t&gt;(_ptr) &amp; 1) == 1">static_cast&lt;int&gt;((static_cast&lt;size_t&gt;(_ptr) >> 4) &amp; 15)</Item>
            <Item Name="[num_graphemes]" Condition="(static_cast&lt;size_t&gt;(_ptr) &amp; 1) == 0">_ptr->_num_graphemes</Item>
            <Item Name="[0]" Condition="((static_cast&lt;size_t&gt;(_ptr) &amp; 1) == 1) &amp;&amp; ((static_cast&lt;size_t&gt;(_ptr) &amp; 15) &gt;= 3)">static_cast&lt;int&gt;((static_cast&lt;size_t&gt;(_ptr) >> 16) &amp; 0xffff)</Item>
            <Item Name="[1]" Condition="((static_cast&lt;size_t&gt;(_ptr) &amp; 1) == 1) &amp;&amp; ((static_cast&lt;size_t&gt;(_ptr) &amp; 15) &gt;= 5)">static_cast&lt;int&gt;((static_cast&lt;size_t&gt;(_ptr) >> 32) &amp; 0xffff)</Item>
            <Item Name="[2]" Condition="((static_cast&lt;size_t&gt;(_ptr) &amp; 1) == 1) &amp;&amp; ((static_cast&lt;size_t&gt;(_ptr) &amp; 15) &gt;= 7)">static_cast&lt;int&gt;((static_cast&lt;size_t&gt;(_ptr) >> 48) &amp; 0xffff)</Item>
            <ExpandedItem Condition="static_cast&lt;size_t&gt;(_ptr) &amp; 1 == 0">_ptr->_glyphs</ExpandedItem>
        </Expand>
    </Type>
    <Type Name="hi::v1::alignment">
        <DisplayString Condition="_value == 0x00">top-flush</DisplayString>
        <DisplayString Condition="_value == 0x01">top-left</DisplayString>
        <DisplayString Condition="_value == 0x02">top-center</DisplayString>
        <DisplayString Condition="_value == 0x03">top-justified</DisplayString>
        <DisplayString Condition="_value == 0x04">top-right</DisplayString>
        <DisplayString Condition="_value == 0x10">middle-flush</DisplayString>
        <DisplayString Condition="_value == 0x11">middle-left</DisplayString>
        <DisplayString Condition="_value == 0x12">middle-center</DisplayString>
        <DisplayString Condition="_value == 0x13">middle-justified</DisplayString>
        <DisplayString Condition="_value == 0x14">middle-right</DisplayString>
        <DisplayString Condition="_value == 0x20">bottom-flush</DisplayString>
        <DisplayString Condition="_value == 0x21">bottom-left</DisplayString>
        <DisplayString Condition="_value == 0x22">bottom-center</DisplayString>
        <DisplayString Condition="_value == 0x23">bottom-justified</DisplayString>
        <DisplayString Condition="_value == 0x24">bottom-right</DisplayString>
    </Type>
    <Type Name="hi::v1::numeric_array&lt;*,2&gt;">
        <DisplayString>{v[0],g}, {v[1],g}</DisplayString>
        <Expand>
            <Item Name="[x]">v[0],g</Item>
            <Item Name="[y]">v[1],g</Item>
        </Expand>
    </Type>
    <Type Name="hi::v1::numeric_array&lt;*,4&gt;">
        <DisplayString>{v[0],g}, {v[1],g}, {v[2],g}, {v[3],g}</DisplayString>
        <Expand>
            <Item Name="[x]">v[0],g</Item>
            <Item Name="[y]">v[1],g</Item>
            <Item Name="[z]">v[2],g</Item>
            <Item Name="[w]">v[3],g</Item>
        </Expand>
    </Type>
    <Type Name="hi::v1::numeric_array&lt;*,8&gt;">
        <DisplayString>{v[0],g}, {v[1],g}, {v[2],g}, {v[3],g}, {v[4],g}, {v[5],g}, {v[6],g}, {v[7],g}</DisplayString>
        <Expand>
            <Item Name="[0]">v[0],g</Item>
            <Item Name="[1]">v[1],g</Item>
            <Item Name="[2]">v[2],g</Item>
            <Item Name="[3]">v[3],g</Item>
            <Item Name="[4]">v[4],g</Item>
            <Item Name="[5]">v[5],g</Item>
            <Item Name="[6]">v[6],g</Item>
            <Item Name="[7]">v[7],g</Item>
        </Expand>
    </Type>
    <Type Name="hi::v1::geo::point&lt;2&gt;">
        <DisplayString>&lt;{_v.v[0],g}, {_v.v[1],g}&gt;</DisplayString>
        <Expand>
            <Item Name="[x]">_v.v[0],g</Item>
            <Item Name="[y]">_v.v[1],g</Item>
        </Expand>
    </Type>
    <Type Name="hi::v1::geo::point&lt;3&gt;">
        <DisplayString>&lt;{_v.v[0],g}, {_v.v[1],g}, {_v.v[2],g}&gt;</DisplayString>
        <Expand>
            <Item Name="[x]">_v.v[0],g</Item>
            <Item Name="[y]">_v.v[1],g</Item>
            <Item Name="[z]">_v.v[2],g</Item>
        </Expand>
    </Type>
    <Type Name="hi::v1::geo::vector&lt;2&gt;">
        <DisplayString>({_v.v[0],g}, {_v.v[1],g})</DisplayString>
        <Expand>
            <Item Name="[x]">_v.v[0],g</Item>
            <Item Name="[y]">_v.v[1],g</Item>
        </Expand>
    </Type>
    <Type Name="hi::v1::geo::vector&lt;3&gt;">
        <DisplayString>({_v.v[0],g}, {_v.v[1],g}, {_v.v[2],g})</DisplayString>
        <Expand>
            <Item Name="[x]">_v.v[0],g</Item>
            <Item Name="[y]">_v.v[1],g</Item>
            <Item Name="[z]">_v.v[2],g</Item>
        </Expand>
    </Type>
    <Type Name="hi::v1::geo::extent&lt;2&gt;">
        <DisplayString>[{_v.v[0],g}, {_v.v[1],g}]</DisplayString>
        <Expand>
            <Item Name="[width]">_v.v[0],g</Item>
            <Item Name="[height]">_v.v[1],g</Item>
        </Expand>
    </Type>
    <Type Name="hi::v1::geo::extent&lt;3&gt;">
        <DisplayString>[{_v.v[0],g}, {_v.v[1],g}, {_v.v[2],g}]</DisplayString>
        <Expand>
            <Item Name="[width]">_v.v[0],g</Item>
            <Item Name="[height]">_v.v[1],g</Item>
            <Item Name="[depth]">_v.v[2],g</Item>
        </Expand>
    </Type>
    <Type Name="hi::v1::geo::matrix&lt;3&gt;">
        <DisplayString>({_col0.v[0],g}, {_col0.v[1],g}, {_col0.v[2],g}, {_col0.v[3],g}), ({_col1.v[0],g}, {_col1.v[1],g}, {_col1.v[2],g}, {_col1.v[3],g}), ({_col2.v[0],g}, {_col2.v[1],g}, {_col2.v[2],g}, {_col2.v[3],g}), ({_col3.v[0],g}, {_col3.v[1],g}, {_col3.v[2],g}, {_col3.v[3],g})</DisplayString>
    </Type>
    <Type Name="hi::v1::color">
        <DisplayString>{{ r={_v.v[0],g}, g={_v.v[1],g}, b={_v.v[1],g}, a={_v.v[1],g} }}</DisplayString>
        <Expand>
            <Item Name="[red]">_v.v[0],g</Item>
            <Item Name="[green]">_v.v[1],g</Item>
            <Item Name="[blue]">_v.v[2],g</Item>
            <Item Name="[alpha]">_v.v[3],g</Item>
        </Expand>
    </Type>
    <Type Name="hi::v1::corner_radii">
        <DisplayString>{{ lb={_v.v[0],g}, rb={_v.v[1],g}, lt={_v.v[1],g}, rt={_v.v[1],g} }}</DisplayString>
        <Expand>
            <Item Name="[left bottom]">_v.v[0],g</Item>
            <Item Name="[right bottom]">_v.v[1],g</Item>
            <Item Name="[left top]">_v.v[2],g</Item>
            <Item Name="[right top]">_v.v[3],g</Item>
        </Expand>
    </Type>
    <Type Name="hi::v1::rectangle">
        <DisplayString>{{ {origin}, {right}, {up} }}</DisplayString>
        <Expand>
            <Item Name="[origin]">origin</Item>
            <Item Name="[right]">right</Item>
            <Item Name="[up]">up</Item>
        </Expand>
    </Type>
    <Type Name="hi::v1::quad">
        <DisplayString>{{ {p0}, {p1}, {p2}, {p3} }}</DisplayString>
        <Expand>
            <Item Name="[0]">p0</Item>
            <Item Name="[1]">p1</Item>
            <Item Name="[2]">p2</Item>
            <Item Name="[3]">p3</Item>
        </Expand>
    </Type>
    <Type Name="hi::v1::axis_aligned_rectangle">
        <DisplayString>{{ &lt;{v.v[0],g}, {v.v[1],g}&gt;, [{v.v[2] - v.v[0],g}, {v.v[3] - v.v[1],g}] }}</DisplayString>
        <Expand>
            <Item Name="[left]">v.v[0],g</Item>
            <Item Name="[bottom]">v.v[1],g</Item>
            <Item Name="[right]">v.v[2],g</Item>
            <Item Name="[top]">v.v[3],g</Item>
            <Item Name="[width]">v.v[2] - v.v[0],g</Item>
            <Item Name="[height]">v.v[3] - v.v[1],g</Item>
        </Expand>
    </Type>
    <Type Name="hi::v1::sfloat_rgba32x4">
        <DisplayString>({_v[0],g}, {_v[1],g}, {_v[2],g}, {_v[3],g}), ({_v[4],g}, {_v[5],g}, {_v[6],g}, {_v[7],g}), ({_v[8],g}, {_v[9],g}, {_v[10],g}, {_v[11],g}), ({_v[12],g}, {_v[13],g}, {_v[14],g}, {_v[15],g})</DisplayString>
    </Type>
    <Type Name="hi::v1::observer&lt;*&gt;">
        <DisplayString>{_value} #{_observed._ptr->_enable_group_ptr_owners.size()}</DisplayString>
        <Expand>
            <Item Name="[value]">_value</Item>
            <Item Name="[observer count]">_observed._ptr->_enable_group_ptr_owners.size()</Item>
        </Expand>
    </Type>
    <Type Name="hi::v1::tr">
        <DisplayString>tr({_msg_id})</DisplayString>
    </Type>
    <Type Name="hi::v1::label">
        <DisplayString>label({text._msg_id})</DisplayString>
    </Type>
    <Type Name="hi::v1::label_widget">
        <DisplayString>{{ label_widget {label} }}</DisplayString>
    </Type>
    <Type Name="hi::v1::gui_event">
        <DisplayString Condition="_type == hi::v1::gui_event_type::keyboard_down">{_type,en}: {_key,en}</DisplayString>
        <DisplayString Condition="_type == hi::v1::gui_event_type::keyboard_grapheme">{_type,en}: {_grapheme}</DisplayString>
        <DisplayString Condition="_type == hi::v1::gui_event_type::keyboard_partial_grapheme">{_type,en}: {_grapheme}</DisplayString>
        <DisplayString Condition="_type == hi::v1::gui_event_type::mouse_move">{_type,en}, {_mouse.position}</DisplayString>
        <DisplayString>{_type,en}</DisplayString>
    </Type>
    <Type Name="hi::v1::URI::authority_type">
        <DisplayString>{_userinfo}@{_host}:{_port}</DisplayString>
    </Type>
    <Type Name="hi::v1::URI::path_type">
        <DisplayString Condition="_Mypair._Myval2._Mylast - _Mypair._Myval2._Myfirst == 0"></DisplayString>
        <DisplayString Condition="_Mypair._Myval2._Mylast - _Mypair._Myval2._Myfirst == 1">{_Mypair._Myval2._Myfirst[0]}</DisplayString>
        <DisplayString Condition="_Mypair._Myval2._Mylast - _Mypair._Myval2._Myfirst == 2">{_Mypair._Myval2._Myfirst[0]}/{_Mypair._Myval2._Myfirst[1]}</DisplayString>
        <DisplayString Condition="_Mypair._Myval2._Mylast - _Mypair._Myval2._Myfirst == 3">{_Mypair._Myval2._Myfirst[0]}/{_Mypair._Myval2._Myfirst[1]}/{_Mypair._Myval2._Myfirst[2]}</DisplayString>
        <DisplayString>{_Mypair._Myval2._Myfirst,[_Mypair._Myval2._Mylast - _Mypair._Myval2._Myfirst]}</DisplayString>
    </Type>
    <Type Name="hi::v1::URI">
        <DisplayString>{_scheme}://{_authority}/{_path}?{_query}#{_fragment}</DisplayString>
    </Type>
</AutoVisualizer>
