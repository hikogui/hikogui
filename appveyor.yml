# Build worker image (VM template)
image: Visual Studio 2019 Preview

clone_depth: 5

version: '{build}'

platform: x64

configuration: Release

environment:
  VCPKG_TARGET_TRIPLET: "%PLATFORM%-windows-static"
  VCPKG_ROOT: "C:\\Tools\\vcpkg"
  VULKAN_SDK: "C:\\VulkanSDK\\1.2.162.1"
  #APPVEYOR_RDP_PASSWORD: somePassword#123

#cache:
#  - C:\Tools\vcpkg\installed\ -> appveyor.yml # preserve any vcpkg installed stuff
#  - C:\Tools\vcpkg\downloads\ -> appveyor.yml # preserve any vcpkg installed stuff

build:
  verbosity: minimal

# scripts that are called at very beginning, before repo cloning
init:
  - date /T & time /T
  - curl -V
  - cmake --version
  - msbuild /version
  - vcpkg version
  # Set "build version number" to "short-commit-hash" or when tagged to "tag name" (Travis style)
  - ps: >-
      if ($env:APPVEYOR_REPO_TAG -eq "true")
      {
        Update-AppveyorBuild -Version "$env:APPVEYOR_REPO_TAG_NAME"
      }
      else
      {
        Update-AppveyorBuild -Version "dev-$($env:APPVEYOR_REPO_COMMIT.substring(0,7))"
      }

install:
  # 1) Get Git Submodules
  #- git submodule update --init --recursive
  # Update CMake
  - choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
  - refreshenv
  # 2) Update of VCPKG
  - cd C:\Tools\vcpkg
  - git pull --quiet
  - .\bootstrap-vcpkg.bat -disableMetrics
  - vcpkg version
  # 3) Install VULKAN_SDK
  - curl -L --silent --show-error --output Vulkan_SDK_Installer.exe https://sdk.lunarg.com/sdk/download/1.2.162.1/windows/VulkanSDK-1.2.162.1-Installer.exe?Human=true
  - Vulkan_SDK_Installer.exe /S
  - dir %VULKAN_SDK%
  # 4) Install and build dependencies using VCPKG
  - cd C:\projects\ttauri
  - vcpkg install --triplet=%VCPKG_TARGET_TRIPLET% --feature-flags=manifests

before_build:
  # CHECK important folders to see if everything is present
  - dir C:\projects\ttauri
  - dir C:\projects\ttauri\vcpkg_installed
  - dir %VULKAN_SDK%\Bin
  #- dir C:\Tools\vcpkg\installed
  # return
  - cd C:\projects\ttauri

build_script:
  # generate build files
  - cmake -G "Visual Studio 16 2019" -A x64 -B ..\ttauri-build .
  # build
  - cmake --build ..\ttauri-build --config %configuration%

after_build:
   # CHECK important folders to see if all build artifacts are present
   - dir C:\projects\ttauri-build

#artifacts:
#  - path: ttauri.zip
#    name: ttauri

# enable RDP session to Appveyor server
#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))